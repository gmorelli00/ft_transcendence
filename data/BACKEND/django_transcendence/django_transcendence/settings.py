"""
Django settings for django_transcendence project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os, environ # note: environ is for environment variables management
from urllib.parse import urlparse


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# note: initializes environment variable manager
env = environ.Env(
    DEBUG=(bool, False)
)
# note: reading .env file
environ.Env.read_env(os.path.join(BASE_DIR.parent.parent.parent / '.env'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

CLIENT_ID = env("CLIENT_ID")
CLIENT_SECRET = env("CLIENT_SECRET")
REDIRECT_URI = env("REDIRECT_URI")
AUTH_URL = env("AUTHORIZATION_URL")
TOKEN_URL = env("TOKEN_URL")

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY', default='django-insecure-)g4-0v+%z*#nwa=k%-5)#k+o*z2e^k--@+uf&^k#ms*ioiyfc_')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool('DEBUG', default=True)

ALLOWED_HOSTS = ['*']

# CORS_ALLOWED_ORIGINS = [
#     "http://localhost:5173",  # Origine del frontend
#     "http://localhost:8000",
#     "http://127.0.0.1:8000",
# ]


# Application definition

INSTALLED_APPS = [
    # 'rest_framework',
    # 'rest_framework_simplejwt',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # third-party apps
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    # 'rest_framework.authtoken',  # Add this line
    # 'dj_rest_auth.registration',
    # 'dj_rest_auth',
    'pong_game',
    'corsheaders',
    'django_extensions',
    'django_prometheus',
    'oauth2',
]

SOCIALACCOUNT_AUTO_SIGNUP = False

SOCIALACCOUNT_PROVIDERS = {
    'fortytwo': {
        'SCOPE': ['public'],
        'AUTH_PARAMS': {'access_type': 'online'},
    }
}

LANGUAGES = [
    ('en', 'English'),
    ('it', 'Italiano'),
    ('kr', '한국어'),
]

LANGUAGE_CODE = 'en'

# CSRF_TRUSTED_ORIGINS = [
#     "http://localhost:5173",
#     "https://localhost",
#     "https://127.0.0.1",
#     "http://127.0.0.1",
#     "https://tunnel",
#     "http://0.0.0.0",
#     "https://nginx",
#     "http://nginx",
#     "http://localhost:8000",
# ]


CORS_ALLOW_CREDENTIALS = True

CORS_ALLOW_HEADERS = [
    'content-type',
    'authorization',
    'x-requested-with',
    "x-csrftoken",
    'accept',
    'origin',
]

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend'
]

# AUTHENTICATION_BACKENDS = [
#     'django.contrib.auth.backends.ModelBackend',  # Default backend
#     'allauth.account.auth_backends.AuthenticationBackend',  # Allauth backend
# ]

# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django_prometheus.middleware.PrometheusBeforeMiddleware',
    'allauth.account.middleware.AccountMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    "whitenoise.middleware.WhiteNoiseMiddleware",
    'django.middleware.locale.LocaleMiddleware',
    'django_prometheus.middleware.PrometheusAfterMiddleware',
]


STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

CORS_ORIGIN_ALLOW_ALL = True

# REST_FRAMEWORK = {
#     'DEFAULT_RENDERER_CLASSES': [
#         'rest_framework.renderers.JSONRenderer',  # Rende l'API solo JSON
#     ],
#     'DEFAULT_AUTHENTICATION_CLASSES': [
#         'rest_framework.authentication.SessionAuthentication',  # Per i template Django
#         'rest_framework.authentication.BasicAuthentication',    # Per autenticazione base (opzionale)
#         'rest_framework_simplejwt.authentication.JWTAuthentication',  # Per il login via API
#     ],
#     'DEFAULT_PERMISSION_CLASSES': [
#         'rest_framework.permissions.IsAuthenticated',  # Limita l'accesso alle API agli utenti autenticati
#     ],
#     "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
#     "PAGE_SIZE": 10,
# }

# from datetime import timedelta

# LOGIN_URL = '/login/'
# LOGOUT_REDIRECT_URL = '/'
# ACCOUNT_USERNAME_REQUIRED = False

# LOGIN_REDIRECT_URL = '/'
# CSRF_COOKIE_HTTPONLY = True
# CSRF_COOKIE_SECURE = False
# CSRF_COOKIE_SAMESITE = 'Lax'
# SESSION_COOKIE_SAMESITE = 'Lax'

# SIMPLE_JWT = {
#     "ACCESS_TOKEN_LIFETIME": timedelta(minutes=30),  # Durata del token
#     "REFRESH_TOKEN_LIFETIME": timedelta(days=7),  # Durata del refresh token
#     "AUTH_HEADER_TYPES": ("Bearer",),
# }

ROOT_URLCONF = 'django_transcendence.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_transcendence.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES_URL = env.db_url('DATABASE_URL')

DATABASES = {
    'default': {
        'ENGINE': 'django_prometheus.db.backends.postgresql',
        'NAME': env('POSTGRES_DB'),
        'USER': env('POSTGRES_USER'),
        'PASSWORD': env('POSTGRES_PASSWORD'),
        'HOST': env('POSTGRES_HOST', default='localhost'),
        'PORT': env('POSTGRES_PORT', default='5432'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

# AUTH_PASSWORD_VALIDATORS = [
#     {
#         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
#     },
# ]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/
STATIC_ROOT = os.path.join(BASE_DIR, '/staticfiles')
STATIC_URL = '/static/'
# STATICFILES_DIRS = [os.path.join(BASE_DIR, 'pong_game/static')]

# STATICFILES_DIRS = [
#    os.path.join(BASE_DIR, 'pong_game/static'),  # Adjusted to point to your pong_game/static directory
# ]

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# login
# Base URL for login and logout
# LOGIN_REDIRECT_URL = '/'  # Redirect after successful login
# ACCOUNT_LOGOUT_REDIRECT_URL = '/'  # Redirect after logout
# ACCOUNT_LOGOUT_ON_GET = True  # Logs out immediately on a GET request

# # Email and Username settings
# ACCOUNT_AUTHENTICATION_METHOD = 'username_email'  # Use 'username', 'email', or 'username_email'
# ACCOUNT_EMAIL_REQUIRED = True  # Require email during signup
# ACCOUNT_EMAIL_VERIFICATION = 'optional'  # Can be 'mandatory', 'optional', or 'none'

# # Signup and login behavior
# ACCOUNT_USERNAME_REQUIRED = True  # Require username during signup
# ACCOUNT_SIGNUP_REDIRECT_URL = '/'  # Redirect after signup (optional)
# ACCOUNT_SESSION_REMEMBER = True  # Keep the session logged in

# # Email configuration
# ACCOUNT_EMAIL_CONFIRMATION_EXPIRE_DAYS = 3  # Link expiry for confirmation emails
# ACCOUNT_EMAIL_SUBJECT_PREFIX = '[My Project] '  # Prefix for email subjects
